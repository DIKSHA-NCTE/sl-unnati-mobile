{"version":3,"sources":["webpack:///./src/app/create-task/create-task.module.ts","webpack:///./src/app/create-task/create-task.page.html","webpack:///./src/app/create-task/create-task.page.scss","webpack:///./src/app/create-task/create-task.page.ts"],"names":[],"mappings":"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","file":"create-task-create-task-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport {SharedModule} from '../shared.module';\nimport { CreateTaskPage } from './create-task.page';\nimport {TranslateModule} from '@ngx-translate/core';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CreateTaskPage\n  }\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    TranslateModule.forChild()\n  ],\n  declarations: [CreateTaskPage]\n})\nexport class CreateTaskPageModule {}\n","module.exports = \"<ion-header>\\n  <app-header [title]=\\\"'add_task.title' | translate\\\" [showMenu]=\\\"false\\\" [showBack]=\\\"true\\\" [isGoBack]=\\\"back\\\"\\n    [isParam]=\\\"parameter\\\" [noBorder]=\\\"false\\\">\\n  </app-header>\\n</ion-header>\\n<ion-content>\\n  <h4 style=\\\"padding: 10px 15px;\\\" *ngIf=\\\"!editTitle\\\" (click)=\\\"allowEdit('title')\\\">{{currentMyProject?.title}}</h4>\\n  <ion-item class=\\\"custom-ion-item\\\" *ngIf=\\\"editTitle\\\" (mouseout)=\\\"blockEdit('title')\\\">\\n    <ion-label class=\\\"custom-label\\\" position=\\\"floating\\\"\\n      [ngClass]=\\\"{'required-field':markLabelsAsInvalid && !currentMyProject.title}\\\">\\n      {{'create_project.title_of_project' | translate}}</ion-label>\\n    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"currentMyProject.title\\\" name=\\\"title\\\"\\n      placeholder=\\\"{{'create_project.placeholder_project_title'| translate}}\\\" maxlength=\\\"280\\\"></ion-input>\\n  </ion-item>\\n  <form [formGroup]=\\\"addTask\\\" class=\\\"create-project\\\">\\n      <ion-label class=\\\"custom-label\\\" position=\\\"floating\\\" style=\\\"text-transform: none;padding-left: 15px; font-size: 20px;\\\"\\n      [ngClass]=\\\"{'required-field':markLabelsAsInvalid}\\\">{{'add_task.add_a_task'| translate}}\\n    </ion-label>\\n    <ion-item class=\\\"custom-ion-item\\\">\\n      <ion-input type=\\\"text\\\" [(ngModel)]=\\\"task.title\\\" name=\\\"title\\\" formControlName=\\\"title\\\"\\n        placeholder=\\\"{{'add_task.placeholder_task_title'| translate}}\\\" style=\\\"border-top-right-radius: 0px;\\n      border-bottom-right-radius: 0px;\\\"></ion-input>\\n      <img src=\\\"assets/images/timetable.png\\\" slot=\\\"end\\\" class=\\\"right-icon\\\" (click)=\\\"setDate()\\\">\\n    </ion-item>\\n    <ion-button (click)=\\\"create()\\\" color=\\\"primary\\\"  slot=\\\"end\\\" class=\\\"add-btn\\\">\\n      {{'button.add' | translate}}\\n    </ion-button>\\n  </form>\\n  <!-- tasks list -->\\n  <div class=\\\"tasks-container\\\">\\n    <div *ngIf=\\\"currentMyProject?.tasks\\\">\\n      <div *ngFor=\\\"let task of currentMyProject?.tasks\\\">\\n      <ion-card  (click)=\\\"navigateTaskView(task)\\\" *ngIf=\\\"!task.isDeleted\\\">\\n        <ion-card-header>\\n          <h4>{{task?.title}}</h4>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-row>\\n            <ion-col size=\\\"8\\\">\\n              <img src=\\\"assets/images/timetable.png\\\">\\n              <span style=\\\"font-size: 16px;\\n            font-weight: 600;\\\">\\n                {{task?.endDate | date : 'dd-MM-yyyy'}} </span>\\n            </ion-col>\\n            <ion-col size=\\\"4\\\">\\n              <div class=\\\"statusbar\\\" *ngIf=\\\"task?.status\\\"\\n                [ngClass]=\\\"{'notyetstart': task.status == 'Not started','completed': task.status == 'Completed', 'inprogress': task.status == 'In Progress'}\\\">\\n                <div class=\\\"status-plate\\\">{{'add_task.status' | translate}} </div>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </ion-card-content>\\n      </ion-card>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- Popup -->\\n  <div *ngIf=\\\"showpopup\\\" class=\\\"custom-popup\\\">\\n    <div class=\\\"pop-container\\\">\\n      <div class=\\\"pop-ion\\\">\\n        <ion-icon ios='ios-checkmark-circle' md='md-checkmark-circle' color='primary' style='font-size:60px;'>\\n        </ion-icon>\\n      </div>\\n      <div class=\\\"pop-msg\\\">\\n        <h5> {{'message.after_prject_create' | translate}}</h5>\\n      </div>\\n      <ion-row class=\\\"pop-btn\\\">\\n        <ion-col size=\\\"6\\\">\\n          <ion-button color=\\\"primary\\\" (click)=\\\"closepopup()\\\"> {{'button.continue' | translate}}</ion-button>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <ion-button color=\\\"primary\\\" (click)=\\\"navigateToProjectViewScreen()\\\"> {{'button.view_project' | translate}}\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </div>\\n  </div>\\n  <!-- Popup ends here -->\\n  <div>\\n    <ion-button (click)=\\\"save()\\\" color=\\\"secondary\\\" class=\\\"round-corner-btn\\\" expand=\\\"block\\\">\\n      {{'button.save_and_view' | translate}}\\n    </ion-button>\\n  </div>\\n</ion-content>\"","module.exports = \".right-icon {\\n  margin: auto;\\n  padding: 5px;\\n  border: 1px solid #000;\\n  border-left: none;\\n  height: 3.3em;\\n  width: 3.2em;\\n  border-top-right-radius: 4px;\\n  border-bottom-right-radius: 4px; }\\n\\n.add-btn {\\n  text-transform: capitalize;\\n  margin-right: 15px;\\n  font-family: 'SourceSansPro-Bold';\\n  font-size: 16px;\\n  font-weight: 600;\\n  float: right; }\\n\\nion-label {\\n  font-family: 'SourceSansPro-Bold';\\n  text-transform: uppercase;\\n  font-size: 22px;\\n  font-weight: 600; }\\n\\n.tasks-container {\\n  margin-top: 55px;\\n  min-height: 50%;\\n  margin-bottom: 20px; }\\n\\n.tasks-container ion-card {\\n    margin: 5px 0px;\\n    padding: 5px;\\n    border-radius: 0px; }\\n\\n.tasks-container ion-card ion-card-header {\\n      padding: 5px 15px;\\n      font-family: 'SourceSansPro-Bold' !important; }\\n\\n.tasks-container ion-card ion-card-header h4 {\\n        margin: 0px;\\n        color: #000; }\\n\\n.tasks-container ion-card ion-card-content {\\n      padding: 0px; }\\n\\n.tasks-container ion-card ion-card-content img {\\n        width: 30px;\\n        float: left;\\n        margin: 0px 10px; }\\n\\n.tasks-container ion-card ion-card-content .statusbar {\\n        height: 5px;\\n        width: 95%;\\n        border-radius: 15px; }\\n\\n.tasks-container ion-card ion-card-content .statusbar .status-plate {\\n          text-align: center;\\n          text-transform: capitalize;\\n          padding-top: 10px;\\n          font-size: 16px;\\n          font-weight: 600; }\\n\\n.tasks-container ion-card ion-card-content .notyetstart {\\n        background: #e6e6e6; }\\n\\n.tasks-container ion-card ion-card-content .completed {\\n        background: #66f271; }\\n\\n.tasks-container ion-card ion-card-content .inprogress {\\n        background: #ed8e3b; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92aXNod2FuYXRoYmFkaWdlci9Eb2N1bWVudHMvYXBwcy91bm5hdGktbW9iaWxlLWFwcGxpY2F0aW9uL3NsLXVubmF0aS1tb2JpbGUvc3JjL2FwcC9jcmVhdGUtdGFzay9jcmVhdGUtdGFzay5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFZO0VBQ1osWUFBWTtFQUNaLHNCQUFzQjtFQUN0QixpQkFBaUI7RUFDakIsYUFBYTtFQUNiLFlBQVk7RUFDWiw0QkFBNEI7RUFDNUIsK0JBQStCLEVBQUE7O0FBRW5DO0VBRUksMEJBQTBCO0VBQzFCLGtCQUFrQjtFQUNsQixpQ0FBaUM7RUFDakMsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixZQUFZLEVBQUE7O0FBRWhCO0VBQ0ksaUNBQWlDO0VBQ2pDLHlCQUF5QjtFQUN6QixlQUFlO0VBQ2YsZ0JBQWdCLEVBQUE7O0FBRW5CO0VBQ0ksZ0JBQWU7RUFDZixlQUFlO0VBQ2YsbUJBQW1CLEVBQUE7O0FBSHZCO0lBS08sZUFBZTtJQUNmLFlBQVk7SUFDWixrQkFBa0IsRUFBQTs7QUFQekI7TUFVTyxpQkFBaUI7TUFDakIsNENBQTRDLEVBQUE7O0FBWG5EO1FBYVcsV0FBVztRQUNYLFdBQVcsRUFBQTs7QUFkdEI7TUFrQlEsWUFBWSxFQUFBOztBQWxCcEI7UUFxQlcsV0FBVztRQUFFLFdBQVc7UUFBRSxnQkFBZ0IsRUFBQTs7QUFyQnJEO1FBd0JXLFdBQVc7UUFDWCxVQUFVO1FBQ1YsbUJBQW1CLEVBQUE7O0FBMUI5QjtVQTRCVyxrQkFBa0I7VUFDbEIsMEJBQTBCO1VBQzFCLGlCQUFpQjtVQUNqQixlQUFlO1VBQ2YsZ0JBQ0EsRUFBQTs7QUFqQ1g7UUFxQ1csbUJBQW1CLEVBQUE7O0FBckM5QjtRQXlDVyxtQkFBbUIsRUFBQTs7QUF6QzlCO1FBNkNXLG1CQUFtQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvY3JlYXRlLXRhc2svY3JlYXRlLXRhc2sucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJpZ2h0LWljb257XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwO1xuICAgIGJvcmRlci1sZWZ0OiBub25lO1xuICAgIGhlaWdodDogMy4zZW07XG4gICAgd2lkdGg6IDMuMmVtO1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA0cHg7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDRweDtcbn1cbi5hZGQtYnRuXG57XG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICAgIGZvbnQtZmFtaWx5OiAnU291cmNlU2Fuc1Byby1Cb2xkJztcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBmbG9hdDogcmlnaHQ7XG59XG5pb24tbGFiZWx7XG4gICAgZm9udC1mYW1pbHk6ICdTb3VyY2VTYW5zUHJvLUJvbGQnO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIH1cbiAudGFza3MtY29udGFpbmVye1xuICAgICBtYXJnaW4tdG9wOjU1cHg7XG4gICAgIG1pbi1oZWlnaHQ6IDUwJTtcbiAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgaW9uLWNhcmR7XG4gICAgICAgIG1hcmdpbjogNXB4IDBweDtcbiAgICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwcHg7XG4gICAgIGlvbi1jYXJkLWhlYWRlclxuICAgICB7XG4gICAgICAgIHBhZGRpbmc6IDVweCAxNXB4O1xuICAgICAgICBmb250LWZhbWlseTogJ1NvdXJjZVNhbnNQcm8tQm9sZCcgIWltcG9ydGFudDtcbiAgICAgICAgaDR7XG4gICAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICAgIGNvbG9yOiAjMDAwO1xuICAgICAgICB9XG4gICAgIH1cbiAgICAgaW9uLWNhcmQtY29udGVudCB7XG4gICAgICAgICBwYWRkaW5nOiAwcHg7XG4gICAgICAgIGltZ1xuICAgICAgICB7XG4gICAgICAgICAgICB3aWR0aDogMzBweDsgZmxvYXQ6IGxlZnQ7IG1hcmdpbjogMHB4IDEwcHg7XG4gICAgICAgIH1cbiAgICAgICAgLnN0YXR1c2JhcntcbiAgICAgICAgICAgIGhlaWdodDogNXB4O1xuICAgICAgICAgICAgd2lkdGg6IDk1JTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gICAgICAgICAgICAuc3RhdHVzLXBsYXRle1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAubm90eWV0c3RhcnRcbiAgICAgICAge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogI2U2ZTZlNjtcbiAgICAgICAgfVxuICAgICAgICAuY29tcGxldGVkXG4gICAgICAgIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICM2NmYyNzE7XG4gICAgICAgIH1cbiAgICAgICAgLmlucHJvZ3Jlc3NcbiAgICAgICAge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogI2VkOGUzYjtcbiAgICAgICAgfVxuICAgIH1cbiAgICAgfVxuIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { DatePicker } from '@ionic-native/date-picker/ngx';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Storage } from '@ionic/storage';\nimport { HomeService } from '../home/home.service';\nimport { CreateTaskService } from './create-task.service';\nimport { ToastService } from '../toast.service';\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.page.html',\n  styleUrls: ['./create-task.page.scss'],\n})\nexport class CreateTaskPage implements OnInit {\n  addTask: FormGroup;\n  today: any = new Date();\n  task: any = {};\n  markLabelsAsInvalid: boolean = false;\n  back;\n  parameter;\n  currentMyProject: any;\n  from;\n  editTitle: boolean = false;\n  showpopup: boolean = false;\n  constructor(public formBuilder: FormBuilder,\n    public router: Router,\n    public datepipe: DatePipe,\n    public datePicker: DatePicker,\n    public storage: Storage,\n    public homeService: HomeService,\n    public route: ActivatedRoute,\n    public createTaskService: CreateTaskService,\n    public toastService: ToastService,\n  ) {\n    route.params.subscribe(params => {\n      this.getCurrentProject(params.id);\n      this.from = params.from;\n      if (params.from == 'cp') {\n        this.back = 'project-view/create-project';\n      } else {\n        this.back = 'project-view/project-detail/';\n        this.parameter = 'my_projects';\n      }\n    })\n  }\n\n  ionViewDidEnter() {\n    this.showpopup = false;\n    this.prepareForm();\n    this.task = {};\n    this.markLabelsAsInvalid = false;\n  }\n  ngOnInit() {\n    this.prepareForm();\n    this.today = this.datepipe.transform(this.today, 'dd-MM-yyyy');\n  }\n  //Form preparing\n  public prepareForm() {\n    this.addTask = this.formBuilder.group({\n      title: ['', Validators.required],\n      endDate: ['', Validators.required]\n    })\n  }\n  public getCurrentProject(id) {\n    let mapped: boolean = false;\n    this.storage.get('latestProjects').then(projectList => {\n      if (projectList) {\n        projectList.forEach(programs => {\n          programs.projects.forEach(project => {\n            if (project._id == id) {\n              this.currentMyProject = project;\n              mapped = true;\n            }\n          });\n        });\n        // projectList.programs.forEach(programs => {\n        //   if (programs.projects) {\n        //     programs.projects.forEach(project => {\n        //       if (project._id == id) {\n        //         this.currentMyProject = project;\n        //         mapped = true;\n        //       }\n        //     });\n        //   }\n        // });\n      }\n\n      if (!mapped) {\n        projectList[0].projects.forEach(project => {\n          if (project._id == id) {\n            this.currentMyProject = project;\n          }\n        });\n      }\n    })\n  }\n  // set date\n  public setDate() {\n    this.datePicker.show({\n      date: new Date(),\n      mode: 'date',\n      androidTheme: this.datePicker.ANDROID_THEMES.THEME_HOLO_DARK\n    }).then(\n      date => {\n        this.task.endDate = this.datepipe.transform(new Date(date));\n      },\n      err => console.log('Error occurred while getting date: ', err)\n    );\n  }\n\n  //  Create new Task\n  //  Create new Task\n  public create() {\n    let mapped: boolean = false;\n    if (!this.task.title) {\n      this.markLabelsAsInvalid = true;\n    } else {\n      this.markLabelsAsInvalid = false;\n      this.task.status = \"Not started\";\n      this.task.isSync = false;\n      if (!this.task.subTasks) {\n        this.task.subTasks = [];\n      }\n      this.task.isNew = true;\n      if (this.currentMyProject.tasks) {\n        // adding task id\n        this.task._id = this.currentMyProject.tasks.length + 2;\n      } else {\n        this.task._id = 1;\n      }\n      this.task.projectId = this.currentMyProject._id;\n      this.currentMyProject.lastUpdate = new Date();\n      this.currentMyProject.tasks.push(this.task);\n      this.currentMyProject.isEdited = true;\n      this.storage.set('newcreatedproject', this.currentMyProject).then(cp => {\n        this.currentMyProject = cp;\n        // if (this.currentMyProject.createdType) {\n        this.storage.get('latestProjects').then(myProjects => {\n          if (myProjects) {\n            if (myProjects.program)\n              myProjects.program.forEach(programs => {\n                if (programs.projects) {\n                  programs.projects.forEach(project => {\n                    if (project._id == cp._id) {\n                      this.currentMyProject = project;\n                      mapped = true;\n                    }\n                  });\n                }\n              });\n          }\n          if (!mapped) {\n            myProjects[0].projects.forEach(function (myProject, i) {\n              if (myProject._id == cp._id) {\n                myProjects[0].projects[i] = cp;\n              }\n            });\n          }\n          this.storage.set('latestProjects', myProjects).then(success => {\n            this.toastService.successToast('message.task_is_created');\n            this.homeService.loadActiveProjects();\n          })\n        })\n      })\n      this.task = {};\n      this.prepareForm();\n    }\n  }\n  // save project\n  public save() {\n    if (this.from != 'pd') {\n      this.showpopup = true;\n    } else {\n      this.navigateToProjectViewScreen();\n    }\n  }\n  public closepopup() {\n    this.showpopup = false;\n  }\n  // Navigate to project view screen\n  public navigateToProjectViewScreen() { \n    this.closepopup();\n    this.storage.set('projectToBeView', this.currentMyProject).then(project => {\n      this.router.navigate(['/project-view/project-detail/my_projects'])\n    })\n  }\n\n  // navigate to task detail screen\n  navigateTaskView(task) {\n    this.storage.set('cTask', task).then(ct => {\n      this.router.navigate(['/project-view/current-task', task._id, this.from]);\n    });\n  }\n  // allow user to edit the values\n  public allowEdit(field) {\n    switch (field) {\n      case 'title': {\n        this.editTitle = true;\n        break;\n      }\n    }\n  }\n  // disable the edit option, once user click outside the input field.\n  public blockEdit(field) {\n    switch (field) {\n      case 'title': {\n        if (this.currentMyProject.title) {\n          this.editTitle = false;\n          this.markLabelsAsInvalid = false;\n        } else {\n          this.markLabelsAsInvalid = true;\n        }\n        this.updateProject();\n        break;\n      }\n    }\n  }\n  // After editing update the project with new values.\n  updateProject() {\n    this.currentMyProject.isEdited = true;\n    this.currentMyProject.lastUpdate = new Date();\n    this.storage.set('newcreatedproject', this.currentMyProject).then(cp => {\n      this.currentMyProject = cp;\n      this.storage.get('latestProjects').then(myProjects => {\n        if (myProjects) {\n          if (myProjects.program)\n            myProjects.program.forEach(programs => {\n              if (programs.projects) {\n                programs.projects.forEach(project => {\n                  if (project._id == cp._id) {\n                    project = cp;\n                    this.storage.set('latestProjects', myProjects).then(success => {\n                      this.homeService.loadActiveProjects();\n                    })\n                  }\n                });\n              }\n            });\n          // myProjects[0].projects.forEach(myProject => {\n          //   if (myProject._id == cp._id) {\n          //     myProject.title = cp.title;\n          //     myProject.tasks = cp.tasks;\n          //     this.storage.set('latestProjects', myProjects).then(success => {\n          //       this.homeService.loadActiveProjects();\n          //     })\n          //   }\n          // });\n        }\n      })\n    })\n  }\n  ngOnDestroy() {\n    this.showpopup = false;\n  }\n}"],"sourceRoot":""}