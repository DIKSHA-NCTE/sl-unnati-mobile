{"version":3,"sources":["webpack:///./src/app/last-month-reports/last-month-reports.module.ts","webpack:///./src/app/last-month-reports/last-month-reports.page.html","webpack:///./src/app/last-month-reports/last-month-reports.page.scss","webpack:///./src/app/last-month-reports/last-month-reports.page.ts"],"names":[],"mappings":"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","file":"last-month-reports-last-month-reports-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport {TranslateModule} from '@ngx-translate/core';\nimport { LastMonthReportsPage } from './last-month-reports.page';\nimport {SharedModule} from '../shared.module';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nconst routes: Routes = [\n  {\n    path: '',\n    component: LastMonthReportsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,SharedModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    TranslateModule.forChild()\n  ],\n  declarations: [LastMonthReportsPage],\n  providers:[ScreenOrientation]\n})\nexport class LastMonthReportsPageModule {}\n","module.exports = \"<ion-content padding>\\n  <div *ngIf=\\\"report\\\">\\n    <h5>\\n      {{ \\\"last_month_report.projects_cmpltd_lstmnth\\\" | translate }}\\n    </h5>\\n    <div>{{ report.startMonth }}</div>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col class=\\\"status-card task-completed-box\\\">\\n          <h3>{{ \\\"last_month_report.completed\\\" | translate }}</h3>\\n          <h1>\\n            <span *ngIf=\\\"report.completed <= 9\\\">\\n              0{{ report.completed }} &nbsp;</span\\n            >\\n            <span *ngIf=\\\"report.completed >= 10\\\">\\n              {{ report.completed }} &nbsp;</span\\n            >\\n          </h1>\\n        </ion-col>\\n        <ion-col class=\\\"status-card task-pending-box\\\">\\n          <h3>{{ \\\"last_month_report.pending\\\" | translate }}</h3>\\n          <h1>\\n            <span *ngIf=\\\"report.pending <= 9\\\">\\n              0{{ report.pending }} &nbsp;</span\\n            >\\n            <span *ngIf=\\\"report.pending >= 10\\\">\\n              {{ report.pending }} &nbsp;</span\\n            >\\n          </h1>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n    <div class=\\\"action-item\\\" (click)=\\\"viewFullReport('lastMonth')\\\">\\n      {{ \\\"last_month_report.view_full_reports\\\" | translate }}\\n    </div>\\n    <h5>\\n      {{ \\\"last_month_report.tasks_cmpltd_lstmnth\\\" | translate }}\\n    </h5>\\n    {{ report.startMonth }}\\n    <div>\\n      <highcharts-chart\\n        [Highcharts]=\\\"highcharts\\\"\\n        [options]=\\\"chartOptions\\\"\\n        style=\\\"width: 100%; height: 400px; display: block;\\\"\\n      >\\n      </highcharts-chart>\\n    </div>\\n    <ion-row>\\n      <ion-col class=\\\"legend-left\\\">\\n        <span class=\\\"dot-pending\\\"> &nbsp; </span> Tasks Pending <br />\\n        <span style=\\\"font-size:24px; \\\">{{ report.pending }}</span>\\n      </ion-col>\\n      <ion-col class=\\\"legend-right\\\">\\n        <span class=\\\"dot-completed\\\"> &nbsp; </span> Tasks Completed <br />\\n        <span style=\\\"font-size:24px; \\\"> {{ report.completed }} </span>\\n      </ion-col>\\n    </ion-row>\\n  </div>\\n  <div *ngIf=\\\"showSkeleton\\\">\\n    <div class=\\\"skeleton-card-content\\\">\\n      <ion-card *ngFor=\\\"let skeleton of skeletons\\\">\\n        <ion-card-content class=\\\"skeleton-card-content\\\">\\n          <p><ion-skeleton-text animated></ion-skeleton-text></p>\\n          <p>\\n            <ion-skeleton-text animated></ion-skeleton-text>\\n            <ion-skeleton-text animated></ion-skeleton-text>\\n            <ion-skeleton-text animated></ion-skeleton-text>\\n          </p>\\n          <p>\\n            <ion-skeleton-text animated></ion-skeleton-text>\\n          </p>\\n        </ion-card-content>\\n      </ion-card>\\n    </div>\\n  </div>\\n</ion-content>\\n\"","module.exports = \".status-card {\\n  border-radius: 5px;\\n  color: #fff; }\\n  .status-card span {\\n    border-bottom: 2px solid #fff;\\n    font-size: 36px; }\\n  .status-card h1 {\\n    margin-top: 10px; }\\n  .task-completed-box {\\n  background: linear-gradient(140deg, #5bd895 32%, #45673b 71%, #1a4b00 88%);\\n  margin-right: 3px; }\\n  .task-pending-box {\\n  background: linear-gradient(140deg, #d8735b 32%, #a31919 71%, #9f0303 88%);\\n  margin-left: 3px; }\\n  .action-item {\\n  color: #3b86ff;\\n  text-align: center;\\n  border-bottom: 1px solid #000;\\n  margin: 30px 0px;\\n  padding-bottom: 10px; }\\n  .dot-pending {\\n  height: 16px;\\n  width: 16px;\\n  background-color: #bfbfbf;\\n  border-radius: 50%;\\n  display: inline-block; }\\n  .dot-completed {\\n  height: 16px;\\n  width: 16px;\\n  background-color: #20ba8d;\\n  border-radius: 50%;\\n  display: inline-block; }\\n  .legend-left {\\n  text-align: center;\\n  padding: 0px;\\n  margin-left: -9%;\\n  font-weight: 500; }\\n  .legend-right {\\n  text-align: center;\\n  margin-right: -7%;\\n  padding: 0px;\\n  font-weight: 500; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92aXNod2FuYXRoYmFkaWdlci9Eb2N1bWVudHMvYXBwcy9Vbm5hdGktbW9iaWxlL3NsLXVubmF0aS1tb2JpbGUvc3JjL2FwcC9sYXN0LW1vbnRoLXJlcG9ydHMvbGFzdC1tb250aC1yZXBvcnRzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXLEVBQUE7RUFGYjtJQUlJLDZCQUE2QjtJQUM3QixlQUFlLEVBQUE7RUFMbkI7SUFRSSxnQkFBZ0IsRUFBQTtFQUdwQjtFQUNFLDBFQUEwRTtFQUMxRSxpQkFBaUIsRUFBQTtFQUVuQjtFQUNFLDBFQUEwRTtFQUMxRSxnQkFBZ0IsRUFBQTtFQUVsQjtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsNkJBQTZCO0VBQzdCLGdCQUFnQjtFQUNoQixvQkFBb0IsRUFBQTtFQUV0QjtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1gseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixxQkFBcUIsRUFBQTtFQUV2QjtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1gseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixxQkFBcUIsRUFBQTtFQUV2QjtFQUNFLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGdCQUFnQixFQUFBO0VBRWxCO0VBQ0Usa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1osZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sYXN0LW1vbnRoLXJlcG9ydHMvbGFzdC1tb250aC1yZXBvcnRzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdGF0dXMtY2FyZCB7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgY29sb3I6ICNmZmY7XG4gIHNwYW4ge1xuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZmZmO1xuICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgfVxuICBoMSB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgfVxufVxuLnRhc2stY29tcGxldGVkLWJveCB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxNDBkZWcsICM1YmQ4OTUgMzIlLCAjNDU2NzNiIDcxJSwgIzFhNGIwMCA4OCUpO1xuICBtYXJnaW4tcmlnaHQ6IDNweDtcbn1cbi50YXNrLXBlbmRpbmctYm94IHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE0MGRlZywgI2Q4NzM1YiAzMiUsICNhMzE5MTkgNzElLCAjOWYwMzAzIDg4JSk7XG4gIG1hcmdpbi1sZWZ0OiAzcHg7XG59XG4uYWN0aW9uLWl0ZW0ge1xuICBjb2xvcjogIzNiODZmZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzAwMDtcbiAgbWFyZ2luOiAzMHB4IDBweDtcbiAgcGFkZGluZy1ib3R0b206IDEwcHg7XG59XG4uZG90LXBlbmRpbmcge1xuICBoZWlnaHQ6IDE2cHg7XG4gIHdpZHRoOiAxNnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmZiZmJmO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbi5kb3QtY29tcGxldGVkIHtcbiAgaGVpZ2h0OiAxNnB4O1xuICB3aWR0aDogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwYmE4ZDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG4ubGVnZW5kLWxlZnQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDBweDtcbiAgbWFyZ2luLWxlZnQ6IC05JTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cbi5sZWdlbmQtcmlnaHQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1yaWdodDogLTclO1xuICBwYWRkaW5nOiAwcHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as Highcharts from 'highcharts';\nimport { ApiProvider } from '../api/api';\nimport { Storage } from '@ionic/storage';\nimport { ToastController } from '@ionic/angular';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport $ from 'jquery'\nimport { MyReportsService } from '../my-reports/my-reports.service';\n@Component({\n  selector: 'app-last-month-reports',\n  templateUrl: './last-month-reports.page.html',\n  styleUrls: ['./last-month-reports.page.scss'],\n})\nexport class LastMonthReportsPage implements OnInit {\n  public currentMonth;\n  public showChart: boolean = false;\n  public report;\n  public chartOptions;\n  public showSkeleton: boolean = false;\n  public skeletons = [{}, {}, {}, {}, {}];\n  highcharts = Highcharts;\n  // chartOptions = {\n  //   chart: {\n  //     type: 'pie',\n  //     plotBorderWidth: null,\n  //     plotShadow: false\n  //   },\n  //   title: {\n  //     text: ''\n  //   },\n  //   tooltip: {\n  //     pointFormat: '{series.name}: <b>{point.percentage:}%</b>'\n  //   },\n  //   plotOptions: {\n  //     pie: {\n  //       shadow: false,\n  //       center: ['50%', '50%'],\n  //     }\n  //   },\n  //   series: [{\n  //     name: 'Tasks',\n  //     data: [[\"Completed\", 5], [\"Pending\", 3]],\n  //     size: '70%',\n  //     innerSize: '50%',\n  //     showInLegend: true,\n  //     dataLabels: {\n  //       enabled: false\n  //     }\n  //   }]\n  // };\n  color = \"#20ba8d\";\n  constructor(\n    public router: Router, \n    public myReportsService: MyReportsService, \n    public toastController: ToastController, \n    public api: ApiProvider, \n    public storage: Storage,\n    public screenOrientation: ScreenOrientation\n    ) { }\n  ionViewDidEnter() {\n    try {\n      this.screenOrientation.lock(this.screenOrientation.ORIENTATIONS.PORTRAIT);\n    } catch (error) {\n    }\n  }\n  ngOnInit() {\n    // this.getChart();\n    if (navigator.onLine) {\n      this.getData();\n    } else {\n      this.errorToast('Please check your internet connection.');\n    }\n  }\n\n  getChart() {\n    this.showChart = true;\n\n  }\n  public getData() {\n    this.storage.get('userTokens').then(data => {\n      this.api.refershToken(data.refresh_token).subscribe((data: any) => {\n        this.showSkeleton = true;\n        let parsedData = JSON.parse(data._body);\n        if (parsedData && parsedData.access_token) {\n          let userTokens = {\n            access_token: parsedData.access_token,\n            refresh_token: parsedData.refresh_token,\n          };\n          this.storage.set('userTokens', userTokens).then(usertoken => {\n            this.myReportsService.getReports(userTokens.access_token, 'lastMonth').subscribe((data: any) => {\n              this.report = data.data;\n              this.setupChart();\n              this.showSkeleton = false;\n            })\n          }, error => {\n            this.showSkeleton = false;\n          })\n        }\n      }, error => {\n        this.showSkeleton = false;\n      })\n    })\n  }\n  public setupChart() {\n    let totalTask = this.report.completed + this.report.pending;\n    let completed: any = (this.report.completed / totalTask) * 100;\n    completed = completed.toFixed(0);\n    this.chartOptions = {\n      chart: {\n        type: 'pie'\n      },\n      title: {\n        verticalAlign: 'middle',\n        floating: true,\n        text: '<b>' + completed + ' % <br>Completed</b>'\n      },\n      // xAxis: {\n      //   categories: data\n      // },\n      yAxis: {\n        min: 0,\n        title: {\n          text: ''\n        }\n      },\n      legend: {\n        enabled: false\n      }, credits: {\n        enabled: false\n      },\n      plotOptions: {\n        pie: {\n          shadow: false,\n          center: ['50%', '50%'],\n          colors: [\n            '#20ba8d',\n            '#adafad'\n          ],\n        }\n      },\n      series: [{\n        name: \"Tasks\",\n        data: [ [\"Pending\", this.report.pending],[\"Completed\", this.report.completed]],\n        size: '90%',\n        innerSize: '70%',\n        showInLegend: true,\n        dataLabels: {\n          enabled: false\n        }\n      }]\n    };\n  }\n\n  public viewFullReport(value) {\n    if (navigator.onLine) {\n      this.router.navigate(['project-view/fullreports', value]);\n    } else {\n      this.errorToast('Please check your internet connection.');\n    }\n  }\n  // Display error Message\n  async errorToast(msg) {\n    const toast = await this.toastController.create({\n      message: msg,\n      color: 'danger',\n      duration: 2000\n    });\n    toast.present();\n  }\n}\n"],"sourceRoot":""}