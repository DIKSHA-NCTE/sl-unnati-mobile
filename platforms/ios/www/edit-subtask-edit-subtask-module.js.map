{"version":3,"sources":["webpack:///./src/app/edit-subtask/edit-subtask.module.ts","webpack:///./src/app/edit-subtask/edit-subtask.page.html","webpack:///./src/app/edit-subtask/edit-subtask.page.scss","webpack:///./src/app/edit-subtask/edit-subtask.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAES;AAEtD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAe;KAC3B;CACF,CAAC;AAWF;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QATjC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,kEAAe,CAAC;SAChC,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBlC,sLAAsL,OAAO,kFAAkF,4BAA4B,+PAA+P,uCAAuC,0bAA0b,mBAAmB,gCAAgC,kgBAAkgB,mBAAmB,8BAA8B,+fAA+f,gCAAgC,mgBAAmgB,4BAA4B,+ZAA+Z,cAAc,iBAAiB,4FAA4F,6BAA6B,8IAA8I,2BAA2B,qD;;;;;;;;;;;ACA/4G,+DAA+D,uJ;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,8GAAuC;;SAExC,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B","file":"edit-subtask-edit-subtask-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditSubtaskPage } from './edit-subtask.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditSubtaskPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [EditSubtaskPage]\n})\nexport class EditSubtaskPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title> {{title}}\\n      <ion-icon name=\\\"close-circle\\\" (click)=\\\"close()\\\" style=\\\" float: right;\\n        font-size: larger;\\\"></ion-icon>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form [formGroup]=\\\"propertyForm\\\" novalidate>\\n    <div class=\\\"form-group\\\">\\n      <ion-item>\\n        <ion-input type=\\\"text\\\" placeholder=\\\"{{'tasks.title_placeholder' |translate }}\\\" class=\\\"form-control\\\"\\n          formControlName=\\\"title\\\" [(ngModel)]=\\\"task.title\\\" required></ion-input>\\n      </ion-item>\\n      <div *ngIf=\\\"!propertyForm.controls.title.valid && propertyForm.controls.title.dirty\\\" class=\\\"validator-error\\\">\\n        Please enter title of Task.\\n      </div>\\n    </div>\\n    <!-- Start date -->\\n    <div class=\\\"form-group\\\">\\n      <ion-item>\\n        <ion-datetime style=\\\"--padding-start: 0px;\\\" placeholder=\\\"{{'tasks.start_date' |translate }}\\\"\\n          display-format=\\\"DD MM YYYY\\\" picker-format=\\\"MMMM DD YYYY\\\" formControlName=\\\"startDate\\\"\\n          [(ngModel)]=\\\"task.startDate\\\" required></ion-datetime>\\n      </ion-item>\\n      <div *ngIf=\\\"!propertyForm.controls.startDate.valid && propertyForm.controls.startDate.dirty\\\"\\n        class=\\\"validator-error\\\">\\n        Please enter Start date.\\n      </div>\\n    </div>\\n    <!-- End date -->\\n    <div class=\\\"form-group\\\">\\n      <ion-item>\\n        <ion-datetime style=\\\"--padding-start: 0px;\\\" placeholder=\\\"{{'tasks.end_date' |translate }}\\\"\\n          display-format=\\\"DD MM YYYY\\\" picker-format=\\\"MMMM DD YYYY\\\" formControlName=\\\"endDate\\\" [(ngModel)]=\\\"task.endDate\\\"\\n          required></ion-datetime>\\n      </ion-item>\\n      <div *ngIf=\\\"!propertyForm.controls.endDate.valid && propertyForm.controls.endDate.dirty\\\" class=\\\"validator-error\\\">\\n        Please enter End date.\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <ion-item *ngFor=\\\"let assign of task.assignedTo\\\">\\n        <ion-input type=\\\"text\\\" placeholder=\\\"{{'tasks.assignedTo' |translate }}\\\" readonly class=\\\"form-control\\\"\\n          formControlName=\\\"assignTo\\\" [(ngModel)]=\\\"assign\\\" required></ion-input>\\n      </ion-item>\\n      <div\\n        *ngIf=\\\"!propertyForm.controls.assignTo.valid && propertyForm.controls.assignTo.dirty && propertyForm.controls.assignTo.touched\\\"\\n        class=\\\"validator-error\\\">\\n        Please enter Assign to.\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\" *ngIf=\\\"title== 'Edit Task'\\\">\\n      <ion-item>\\n        <ion-input type=\\\"text\\\" placeholder=\\\"{{'tasks.status' |translate }}\\\" class=\\\"form-control\\\"\\n          formControlName=\\\"status\\\" [(ngModel)]=\\\"task.status\\\" required></ion-input>\\n      </ion-item>\\n      <div\\n        *ngIf=\\\"!propertyForm.controls.status.valid && propertyForm.controls.status.dirty && propertyForm.controls.status.touched\\\"\\n        class=\\\"validator-error\\\">\\n        Please enter Status.\\n      </div>\\n    </div>\\n    <div style=\\\"background-color:#cccccc57; padding: 5px; margin-top:20px;\\\">\\n      <ion-button size=\\\"small\\\" color=\\\"light\\\" slot=\\\"start\\\" (click)=\\\"close()\\\"> {{'button.cancel' | translate}}\\n      </ion-button>\\n      <ion-button size=\\\"small\\\" color=\\\"primary\\\" slot=\\\"end\\\" style=\\\"float:right\\\" (click)=\\\"create()\\\">\\n        {{'button.save' | translate}}</ion-button>\\n    </div>\\n  </form>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtc3VidGFzay9lZGl0LXN1YnRhc2sucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-subtask',\n  templateUrl: './edit-subtask.page.html',\n  styleUrls: ['./edit-subtask.page.scss'],\n})\nexport class EditSubtaskPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}